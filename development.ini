[app:OSMTM]
use = egg:OSMTM
reload_templates = true
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = true
default_locale_name = en
sqlalchemy.url = sqlite:///%(here)s/OSMTM.db
session.type = file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.key = OSMQA
session.secret = ae02254a597c45ca3f3b952183ad5f846f9b5b9a
admin_user = pgiraud

fanstatic.bottom = true
fanstatic.debug = true

pyramid.includes = pyramid_debugtoolbar

[filter:weberror]
use = egg:WebError#error_catcher
debug = false

[pipeline:main]
pipeline =
    weberror
    tm
    OSMTM

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 6543
workers = 1
worker_class = socketio.sgunicorn.GeventSocketIOWorker

# Begin logging configuration

[loggers]
keys = root, OSMTM, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_OSMTM]
level = DEBUG
handlers =
qualname = OSMTM

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
